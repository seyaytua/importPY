name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            name: macOS
            ext: .app
          - os: windows-latest
            name: Windows
            ext: .exe
          - os: ubuntu-latest
            name: Linux
            ext: ''
      fail-fast: false
            
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pandas reportlab
        
    - name: Build executable (Unix)
      if: runner.os != 'Windows'
      run: |
        for file in *.py; do
          if [ -f "$file" ]; then
            echo "Building with $file"
            pyinstaller --onefile --windowed --name PDFGenerator "$file"
            break
          fi
        done
        
    - name: Build executable (Windows)
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        $pyfile = Get-ChildItem -Filter *.py | Select-Object -First 1
        if ($pyfile) {
          Write-Host "Building with $($pyfile.Name)"
          pyinstaller --onefile --windowed --name PDFGenerator $pyfile.Name
        } else {
          Write-Host "No Python files found"
          exit 1
        }
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: PDFGenerator-${{ matrix.name }}
        path: dist/*
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Display structure
      run: |
        echo "Current directory:"
        pwd
        echo "Files in artifacts:"
        ls -la artifacts/
        find artifacts -type f -name "*"
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/PDFGenerator-Windows/*
          artifacts/PDFGenerator-macOS/*
          artifacts/PDFGenerator-Linux/*
        draft: false
        prerelease: false
        generate_release_notes: true
        fail_on_unmatched_files: false
